{"version":3,"sources":["components/Header/index.tsx","create/Create.tsx","detail/Detail.tsx","utils/index.ts","edit/Edit.tsx","list/List.tsx","Routes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","margin","marginBottom","Header","classes","AppBar","className","position","Toolbar","IconButton","edge","color","aria-label","Menu","Typography","variant","Button","Create","useForm","register","handleSubmit","errors","Container","Grid","container","item","component","autoComplete","onSubmit","value","console","log","style","width","TextField","label","fullWidth","name","helperText","message","inputRef","required","maxLength","body","minLength","type","Box","my","to","Detail","contents","FetchMemoList","useState","memoList","setMemoList","useEffect","axios","get","then","res","data","length","catch","e","Edit","id","memo","setMemo","onChange","target","onClick","put","headers","updateMemo","card","height","createButton","detailButton","textDecoration","List","fetchMemoList","process","direction","Card","Add","fontSize","map","CardContent","Routes","basename","path","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f35a307.chunk.js","sourcesContent":["import { AppBar, Toolbar, IconButton, Typography, Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Menu } from '@material-ui/icons'\nimport React from 'react'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  margin: {\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nconst Header: React.FC = () => {\n  const classes = useStyles()\n\n  return (\n    <AppBar className={classes.margin} position=\"static\">\n      <Toolbar>\n        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n          <Menu />\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n          MEMO帳\n        </Typography>\n        <Button color=\"inherit\">Login</Button>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Header\n","import { Box, Grid, TextField, Typography } from '@material-ui/core'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport React from 'react'\nimport { useForm } from 'react-hook-form'\nimport { Link } from 'react-router-dom'\n\nimport Header from '../components/Header'\n\nconst Create = () => {\n  const { register, handleSubmit, errors } = useForm()\n  const onSubmit = (value) => console.log(value)\n\n  return (\n    <>\n      <Header />\n      <Container>\n        <Grid container spacing={3}>\n          <Grid item>\n            <Typography variant=\"h4\" component=\"h2\">\n              新規メモ追加\n            </Typography>\n          </Grid>\n          <form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)} style={{ width: '100%' }}>\n            <Grid item>\n              <TextField\n                label=\"title\"\n                margin=\"dense\"\n                fullWidth\n                name=\"title\"\n                helperText={errors.title && errors.title.message}\n                inputRef={register({\n                  required: 'titleは入力必須です',\n                  maxLength: { value: 30, message: 'titleは30文字以内で入力してください。' },\n                })}\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"body\"\n                margin=\"dense\"\n                fullWidth\n                name=\"body\"\n                helperText={errors.body && errors.body.message}\n                inputRef={register({\n                  required: 'bodyは入力必須です',\n                  minLength: { value: 10, message: 'bodyは10文字以上で入力してください。' },\n                })}\n              />\n            </Grid>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n              保存\n            </Button>\n          </form>\n        </Grid>\n      </Container>\n      <Box my={2}>\n        <Link to=\"/\">\n          <Button type=\"button\">一覧ページに戻る</Button>\n        </Link>\n      </Box>\n    </>\n  )\n}\n\nexport default Create\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Header from '../components/Header'\n\nconst Detail = () => {\n  const contents = {\n    title: 'たいとるだよー',\n    body: 'ほんぶんだよー',\n  }\n\n  return (\n    <>\n      <Header />\n      <h1>詳細ページ</h1>\n      <table>\n        <tr>\n          <th>タイトル</th>\n          <td>{contents.title}</td>\n        </tr>\n        <tr>\n          <th>本文</th>\n          <td>{contents.body}</td>\n        </tr>\n      </table>\n      <Link to=\"/\">\n        <button type=\"button\">一覧ページに戻る</button>\n      </Link>\n      <button type=\"button\">削除</button>\n      <Link to=\"/edit\">\n        <button type=\"button\">編集</button>\n      </Link>\n    </>\n  )\n}\n\nexport default Detail\n","import axios from 'axios'\nimport { useState, useEffect } from 'react'\n\nimport { Memo } from '../types'\n\n// メモの全件取得\nexport const FetchMemoList = (): Memo[] => {\n  const [memoList, setMemoList] = useState<Memo[]>([])\n  const fetchData = () => {\n    axios\n      .get('http://localhost:3030/memos') // TODO URLは定数に切る\n      .then((res) => {\n        setMemoList(res.data)\n        console.log(`fetching ${res.data.length} memo data.`)\n      })\n      .catch((e) => console.log(e))\n  }\n\n  // マウント時とアンマウント時に実行させる\n  useEffect(() => fetchData(), [])\n  return memoList\n}\n// 参考 : https://qiita.com/Sotq_17/items/9a3e083d12a52afed6cd\n\n// メモの更新\nexport const UpdateMemo = (memo: Memo) => {\n  const configs = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  }\n  axios\n    .put(\n      `http://localhost:3030/memos/${memo.id}`, // TODO URLは定数に切る\n      {\n        title: memo.title,\n        body: memo.body,\n      },\n      configs\n    )\n    .catch((e) => console.log(e))\n}\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Header from '../components/Header'\nimport { Memo } from '../types'\nimport { UpdateMemo as updateMemo } from '../utils'\n\nconst Edit: React.FC = () => {\n  // TODO 今は固定でデータを用意しているため、編集対象のメモデータを渡してくるようにする\n  // TODO 特にidを固定で'1'に設定しているためどの記事を編集してもid='1'の記事が更新されます\n  const content: Memo = {\n    id: '1',\n    title: 'たいとるだよー',\n    body: 'ほんぶんだよー',\n  }\n  const [memo, setMemo] = useState<Memo>(content)\n\n  return (\n    <>\n      <Header />\n      <h1>編集ページ</h1>\n      <table>\n        <tr>\n          <th>タイトル</th>\n          <td>\n            <textarea onChange={(e) => setMemo({ ...memo, title: e.target.value })}>{memo.title}</textarea>\n          </td>\n        </tr>\n        <tr>\n          <th>本文</th>\n          <td>\n            <textarea onChange={(e) => setMemo({ ...memo, body: e.target.value })}>{memo.body}</textarea>\n          </td>\n        </tr>\n      </table>\n      <Link to=\"/detail\">\n        <button type=\"button\" onClick={() => updateMemo(memo)}>\n          保存\n        </button>\n      </Link>\n    </>\n  )\n}\n\nexport default Edit\n","import { Button, Grid, Card, CardContent, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Add } from '@material-ui/icons'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Header from '../components/Header'\nimport { FetchMemoList as fetchMemoList } from '../utils'\n\nconst useStyles = makeStyles(() => ({\n  card: {\n    height: 180,\n    width: 180,\n  },\n  createButton: {\n    height: '100%',\n    width: '100%',\n  },\n  detailButton: {\n    height: '100%',\n    width: '100%',\n    '& a': {\n      textDecoration: 'none',\n      color: 'inherit',\n    },\n  },\n}))\n\nconst List = () => {\n  const classes = useStyles()\n  const memoList = fetchMemoList()\n\n  return (\n    <div className=\"List\">\n      <Header />\n      <div>{process.env.REACT_APP_PUBLIC_URL}</div>\n      <Grid container direction=\"row\" spacing={3}>\n        <Grid item spacing={3}>\n          <Card className={classes.card}>\n            <Button className={classes.createButton}>\n              <Link to=\"/create\">\n                <Add fontSize=\"large\" />\n              </Link>\n            </Button>\n          </Card>\n        </Grid>\n        {memoList.map((value) => (\n          <Grid item spacing={3} key={value.id}>\n            <Card className={classes.card}>\n              <Button className={classes.detailButton}>\n                <Link to=\"/detail\">\n                  <CardContent>\n                    <Typography variant=\"h6\" component=\"h2\">\n                      {value.title}\n                    </Typography>\n                    <Typography>{value.body}</Typography>\n                  </CardContent>\n                </Link>\n              </Button>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  )\n}\n\nexport default List\n","import React from 'react'\nimport { BrowserRouter, Route } from 'react-router-dom'\n\n// screens\nimport Create from './create/Create'\nimport Detail from './detail/Detail'\nimport Edit from './edit/Edit'\nimport List from './list/List'\n\nconst Routes = () => {\n  return (\n    <BrowserRouter basename={process.env.REACT_APP_PUBLIC_URL}>\n      <div>\n        <Route path=\"/\" exact component={List} />\n        <Route path=\"/create\" component={Create} />\n        <Route path=\"/detail\" component={Detail} />\n        <Route path=\"/edit\" component={Edit} />\n      </div>\n    </BrowserRouter>\n  )\n}\n\nexport default Routes\n","import { Container, makeStyles } from '@material-ui/core'\nimport React from 'react'\n\nimport Routes from './Routes'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    margin: '20px 0',\n  },\n}))\n\nfunction App() {\n  const classes = useStyles()\n  return (\n    <Container className={classes.root}>\n      <Routes />\n    </Container>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}